{
	"info": {
		"_postman_id": "40dee167-3899-485d-a61c-2f7e78f87e0e",
		"name": "APIs",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_uid": "34735841-40dee167-3899-485d-a61c-2f7e78f87e0e"
	},
	"item": [
		{
			"name": "Auth",
			"item": [
				{
					"name": "login with valid credentials",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "df2b39c4-5dc8-4959-b8a3-827dc41c2a24",
								"exec": [
									"pm.environment.set(\"baseUrl\", \"https://dummyjson.com\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "baa53dec-4d3d-4816-b632-cd923632122d",
								"exec": [
									"pm.test(\"Status code is 200\", function(){",
									"    pm.response.to.have.status(200)",
									"    pm.response.to.have.status(\"OK\")",
									"})",
									"",
									"pm.test(\"Successful login\", function(){",
									"    const responseBody = pm.response.json()",
									"    pm.expect(typeof responseBody.accessToken).to.eq('string')",
									"    pm.expect(typeof responseBody.refreshToken).to.eq('string')",
									"    pm.expect(responseBody.username).to.eq('emmaj')",
									"    })",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "9a89b936-226c-445b-8632-13ddd204696a",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"emmaj\",\n    \"password\": \"emmajpass\",\n    \"expiresInMins\": 60 // optional, defaults to 60\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/auth/login",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "attempting to login with no credentials",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "9637671d-f13f-4c80-82b5-d9c230d6ce52",
								"exec": [
									"pm.environment.set(\"baseUrl\", \"https://dummyjson.com\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "5f623087-c143-468c-bb69-c0696178d2a5",
								"exec": [
									"pm.test(\"Status code is 400\", function(){",
									"    pm.response.to.have.status(400)",
									"    pm.response.to.have.status(\"Bad Request\")",
									"})",
									"",
									"pm.test(\"Login with no credentials\", function(){",
									"    const responseBody = pm.response.json()",
									"    pm.expect(responseBody.message).to.eq('Username and password required')",
									"    })"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "f249a810-041f-4df6-805c-2b2f1694cde5",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"\",\n    \"password\": \"\",\n    \"expiresInMins\": 60 // optional, defaults to 60\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/auth/login",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "attempting to login with no username",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "00266439-e50c-4b4c-bc87-ff3abb4e1f90",
								"exec": [
									"pm.environment.set(\"baseUrl\", \"https://dummyjson.com\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "e8522dd3-6525-4324-8e96-e49efb90df4f",
								"exec": [
									"pm.test(\"Status code is 400\", function(){",
									"    pm.response.to.have.status(400)",
									"    pm.response.to.have.status(\"Bad Request\")",
									"})",
									"",
									"pm.test(\"Login with no username\", function(){",
									"    const responseBody = pm.response.json()",
									"    pm.expect(responseBody.message).to.eq('Username and password required')",
									"    })"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "a7de1ba5-ed44-42af-b59b-d5c1884f3e50",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"\",\n    \"password\": \"emmajpass\",\n    \"expiresInMins\": 60 // optional, defaults to 60\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/auth/login",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "attempting to login with no password",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "478134b5-3a8b-417b-b58b-07460c1c6e6e",
								"exec": [
									"pm.environment.set(\"baseUrl\", \"https://dummyjson.com\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "2ec7af87-4e25-47ae-8048-084f79d93ad9",
								"exec": [
									"pm.test(\"Status code is 400\", function(){",
									"    pm.response.to.have.status(400)",
									"    pm.response.to.have.status(\"Bad Request\")",
									"})",
									"",
									"pm.test(\"Login with no password\", function(){",
									"    const responseBody = pm.response.json()",
									"    pm.expect(responseBody.message).to.eq('Username and password required')",
									"    })"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "fef46343-f85c-455b-afee-3d18a32a02ee",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"emmaj\",\n    \"password\": \"\",\n    \"expiresInMins\": 60 // optional, defaults to 60\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/auth/login",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "login with invalid username",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "739eb1a3-b391-405a-8528-6da70d314e8d",
								"exec": [
									"pm.environment.set(\"baseUrl\", \"https://dummyjson.com\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "73ba5679-a266-4c44-b5ee-4fd775261a29",
								"exec": [
									"pm.test(\"Status code is 400\", function(){",
									"    pm.response.to.have.status(400)",
									"    pm.response.to.have.status(\"Bad Request\")",
									"})",
									"",
									"pm.test(\"Invalid username\", function(){",
									"    const responseBody = pm.response.json()",
									"    pm.expect(responseBody.message).to.eq('Invalid credentials')",
									"    })"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "ae02f2eb-ed2f-4957-96c1-08974e94c9de",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"emma\",\n    \"password\": \"emmajpass\",\n    \"expiresInMins\": 60 // optional, defaults to 60\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/auth/login",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "login with invalid password",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "6b4c8835-d86f-44a5-b2df-0c2254e3ec0f",
								"exec": [
									"pm.environment.set(\"baseUrl\", \"https://dummyjson.com\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "0b5409d7-6247-452b-a7a8-adf437047ba3",
								"exec": [
									"pm.test(\"Status code is 400\", function(){",
									"    pm.response.to.have.status(400)",
									"    pm.response.to.have.status(\"Bad Request\")",
									"})",
									"",
									"pm.test(\"Invalid password\", function(){",
									"    const responseBody = pm.response.json()",
									"    pm.expect(responseBody.message).to.eq('Invalid credentials')",
									"    })"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "f1861450-2314-44f8-8d4e-924eaf08b1cb",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"emmaj\",\n    \"password\": \"emma\",\n    \"expiresInMins\": 60 // optional, defaults to 60\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/auth/login",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "login with invalid credentials",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "89c227e4-adc3-4ffb-98f5-dbcbf2d9666a",
								"exec": [
									"pm.environment.set(\"baseUrl\", \"https://dummyjson.com\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "d0c416d9-6757-4fd4-97a5-28a843a1c2fb",
								"exec": [
									"pm.test(\"Status code is 400\", function(){",
									"    pm.response.to.have.status(400)",
									"    pm.response.to.have.status(\"Bad Request\")",
									"})",
									"",
									"pm.test(\"Invalid credentials\", function(){",
									"    const responseBody = pm.response.json()",
									"    pm.expect(responseBody.message).to.eq('Invalid credentials')",
									"    })"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "59021981-4406-47c4-83f0-a1ad96f56823",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"emma\",\n    \"password\": \"emma\",\n    \"expiresInMins\": 60 // optional, defaults to 60\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/auth/login",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "user details",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "72ec80a0-b31c-4f05-a237-535bd8f30383",
								"exec": [
									"pm.test(\"Status code is 200\", function(){",
									"    pm.response.to.have.status(200)",
									"    pm.response.to.have.status(\"OK\")",
									"})",
									"",
									"pm.test(\"User details\", function(){",
									"    const responseBody = pm.response.json()",
									"    pm.expect(responseBody.firstName).to.eq(\"Emma\")",
									"    pm.expect(responseBody.lastName).to.eq(\"Miller\")",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "9912e7f9-d7ae-4f73-abcb-c2a297afe0f7",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/auth/me",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"auth",
								"me"
							]
						}
					},
					"response": []
				}
			],
			"id": "b8b69f45-cc0d-4267-b5b2-6f8bb8453a25"
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "invalid url",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0fbe6191-ee47-40e6-9f22-0c0be2b32cfd",
								"exec": [
									"pm.test(\"Status code is 404\", function(){",
									"    pm.response.to.have.status(404)",
									"     pm.response.to.have.status(\"Not Found\")",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "eabce384-653b-464e-8b83-ac64b7763c11",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/use",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"use"
							]
						}
					},
					"response": []
				},
				{
					"name": "50 users",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0fbe6191-ee47-40e6-9f22-0c0be2b32cfd",
								"exec": [
									"pm.test(\"Status code is 200\", function(){",
									"    pm.response.to.have.status(200)",
									"     pm.response.to.have.status(\"OK\")",
									"})",
									"",
									"pm.test(\"Response body contains 50 users\", function(){",
									"    const responseBody = pm.response.json()",
									"    pm.expect(responseBody).to.have.property(\"limit\")",
									"    pm.expect(responseBody.limit).to.eq(50)",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "1062eaec-6195-4c51-8744-d19969672b06",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/users?limit=50",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users"
							],
							"query": [
								{
									"key": "limit",
									"value": "50"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "invalid user id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0fbe6191-ee47-40e6-9f22-0c0be2b32cfd",
								"exec": [
									"pm.test(\"Status code is 404\", function(){",
									"    pm.response.to.have.status(404)",
									"     pm.response.to.have.status(\"Not Found\")",
									"})",
									"pm.test(\"Invalid user id\", function () {",
									"    const responseBody = pm.response.json();",
									"    const userId = pm.variables.get(\"userId\"); // Fetch the dynamic user ID",
									"    pm.expect(responseBody.message).to.eq(`User with id '${userId}' not found`);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "27d75b81-b22e-40ac-bede-16e8c67515fa",
								"exec": [
									"pm.variables.set(\"userId\", 303); // Replace with the desired ID",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "1ea86a09-75e7-43af-9798-21c0bb4f1690",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/users/{{userId}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"{{userId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "single user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0fbe6191-ee47-40e6-9f22-0c0be2b32cfd",
								"exec": [
									"pm.test(\"Status code is 200\", function(){",
									"    pm.response.to.have.status(200)",
									"     pm.response.to.have.status(\"OK\")",
									"})",
									"pm.test(\"Invalid user id\", function () {",
									"    const responseBody = pm.response.json();",
									"    const userId = pm.variables.get(\"userId\"); ",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "27d75b81-b22e-40ac-bede-16e8c67515fa",
								"exec": [
									"pm.variables.set(\"userId\", 5); // Replace with the desired ID",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "e45c622c-b255-4b69-9a3c-89f310cfaeeb",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/users/{{userId}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"{{userId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "invalid search",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0fbe6191-ee47-40e6-9f22-0c0be2b32cfd",
								"exec": [
									"pm.test(\"Status code is 200\", function(){",
									"    pm.response.to.have.status(200)",
									"     pm.response.to.have.status(\"OK\")",
									"})",
									"pm.test(\"Invalid search\", function () {",
									"    const responseBody = pm.response.json();",
									"    pm.expect(responseBody.users).to.be.an(\"array\").that.is.empty;",
									"    pm.expect(responseBody.total).to.eq(0)",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "27d75b81-b22e-40ac-bede-16e8c67515fa",
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "734874ea-e85e-4a01-8da7-10ae5b4a0f72",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/users/search?q=Moji",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"search"
							],
							"query": [
								{
									"key": "q",
									"value": "Moji"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "search for a user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0fbe6191-ee47-40e6-9f22-0c0be2b32cfd",
								"exec": [
									"pm.test(\"Status code is 200\", function(){",
									"    pm.response.to.have.status(200)",
									"     pm.response.to.have.status(\"OK\")",
									"})",
									"pm.test(\"Search for a user\", function () {",
									"    const responseBody = pm.response.json();",
									"    pm.expect(pm.response.text()).to.include('Smith');",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "27d75b81-b22e-40ac-bede-16e8c67515fa",
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "65aff7a2-57a7-4cc9-8982-1b0638799d6d",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/users/search?q=Smith",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"search"
							],
							"query": [
								{
									"key": "q",
									"value": "Smith"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "filter users by hair color",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0fbe6191-ee47-40e6-9f22-0c0be2b32cfd",
								"exec": [
									"pm.test(\"Status code is 200\", function(){",
									"    pm.response.to.have.status(200)",
									"     pm.response.to.have.status(\"OK\")",
									"})",
									"pm.test(\"Filter users by hair color\", function () {",
									"    const responseBody = pm.response.json();",
									"    pm.expect(responseBody.users).to.be.an(\"array\");",
									"",
									"    // Check every user's hair color ",
									"    const color = pm.variables.get(\"color\"); ",
									"    responseBody.users.forEach(user => {",
									"        pm.expect(user.hair.color).to.eq(color);",
									"    });",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "27d75b81-b22e-40ac-bede-16e8c67515fa",
								"exec": [
									"pm.variables.set(\"color\", \"Red\"); // Replace with the desired color"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "7a9722f2-3a9c-49cc-ab4c-67b90ddc7acd",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/users/filter?key=hair.color&value={{color}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"filter"
							],
							"query": [
								{
									"key": "key",
									"value": "hair.color"
								},
								{
									"key": "value",
									"value": "{{color}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "filter users by roles",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0fbe6191-ee47-40e6-9f22-0c0be2b32cfd",
								"exec": [
									"pm.test(\"Status code is 200\", function(){",
									"    pm.response.to.have.status(200)",
									"     pm.response.to.have.status(\"OK\")",
									"})",
									"pm.test(\"Filter users by roles\", function () {",
									"    const responseBody = pm.response.json();",
									"    pm.expect(responseBody.users).to.be.an(\"array\");",
									"    const role = pm.variables.get(\"role\"); ",
									"     responseBody.users.forEach(user => {",
									"        pm.expect(user.role).to.eq(role);",
									"    });",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "27d75b81-b22e-40ac-bede-16e8c67515fa",
								"exec": [
									"pm.variables.set(\"role\", \"admin\"); // Replace with the desired role"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "7dd8a7bb-ca0f-4e2e-a5d4-ae1c38c5b1b9",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/users/filter?key=role&value={{role}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"filter"
							],
							"query": [
								{
									"key": "key",
									"value": "role"
								},
								{
									"key": "value",
									"value": "{{role}}"
								}
							]
						}
					},
					"response": []
				}
			],
			"id": "25c44e45-c4da-4083-a70c-a46ec65e91af"
		}
	]
}